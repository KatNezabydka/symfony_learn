{% extends('base.html.twig') %}
{% block body %}
    {{ include('micro-post/raw-post.html.twig', { 'post': post }) }}

    <br>
    {% set isLiked = post.getLikedBy.contains(app.user) %}
    <div class="pr-2">
        <button style="display:{% if not isLiked %} block {% else %} none {% endif %}"
                class="btn btn-outline-secondary btn-sm" id="like">Like
            <span class="badge badge-light" id="likes-like">{{ post.getLikedBy().count }}</span>
        </button>
        <button style="display:{% if isLiked %} block {% else %} none {% endif %}"
                class="btn btn-outline-danger btn-sm" id="unlike">Unlike
            <span class="badge badge-light" id="likes-unlike">{{ post.getLikedBy().count }}</span>
        </button>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        let likeButton = document.getElementById('like');
        let unlikeButton = document.getElementById('unlike');

        //слушатель на лайк
        // 3й параметр взят с дизлайка потому что после нажатия на лайк кнопка скроется и отобразится дизлайк
        addOnClick(
            likeButton,
            unlikeButton,
            document.getElementById('likes-unlike'),
            '{{ path('likes_like', {'id': post.id}) }}'
        );
        //слушатель на дизлайк
        addOnClick(
            unlikeButton,
            likeButton,
            document.getElementById('likes-like'),
            '{{ path('likes_unlike', {'id': post.id}) }}'
        );

        function switchButtons(button, oppositeButton) {
            button.disabled = false;
            button.style.display = 'none';
            oppositeButton.style.display = 'block';
        }

        function addOnClick(button, oppositeButton, likeCount, path) {
            // Добавили слушатель на клик
            button.addEventListener('click', function (event) {
                // после клика скрыли кнопку чтобы повторов не было
                {% if not app.user %}
                return window.location.replace('{{ path('user_register') }}');
                {% endif %}

                button.disabled = true;
                // ajax (credentials - for send cookie)
                fetch(path, {'credentials': 'include'})
                    .then(function (response) {
                        response.json().then(function (json) {
                            likeCount.innerText = json.count;
                            switchButtons(button, oppositeButton);
                        })
                    }).catch(function () {
                    switchButtons(button, oppositeButton);
                });

                event.preventDefault()
            });
        }


    </script>
{% endblock %}


